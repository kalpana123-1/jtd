{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/soumitha-revv/Revv/revv-one/src/customersLimit/index.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { CustomerCard } from \"../components/customerCard\";\nimport { ExceededModal } from \"../components/exceededModal\";\nimport customersLimit from \"./customersLimit.module.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { clearState, getCustomer } from \"../redux/actions\";\nimport { Loading } from \"../commonComponents/loading\";\nimport { Error } from \"../commonComponents/error\";\nimport { Redirect, useLocation } from \"react-router\";\nexport const CustomersLimit = () => {\n  _s();\n\n  const [modalData, setModalData] = useState(null);\n  const [modalStatus, setModalStatus] = useState(false);\n  const [exceededState, setExceededState] = useState(false);\n  const [query, setQuery] = useState(\"\");\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const {\n    customer,\n    isLoading,\n    error,\n    errorState,\n    meters,\n    queryData\n  } = useSelector(state => state.customer);\n\n  const search = () => {\n    dispatch(getCustomer(query));\n  };\n\n  const handleModalData = item => {\n    setModalData(item);\n    setModalStatus(true);\n  };\n\n  const handleModalExceededStatus = () => {\n    setModalData({});\n    setModalStatus(false);\n    search();\n  };\n\n  useEffect(() => {\n    let status = false;\n\n    for (const key in customer) {\n      status = status || customer[key].limit <= customer[key].usage;\n    }\n\n    setExceededState(status);\n  }, [customer, modalData]);\n  useEffect(() => {\n    if (query === \"\") {\n      dispatch(clearState());\n    }\n  }, [query]);\n\n  const handleChange = (type, value, usage) => {\n    setModalData({ ...modalData,\n      [type]: {\n        limit: value,\n        usage\n      }\n    });\n  };\n\n  const handleEnter = e => {\n    if (e.key === \"Enter\") {\n      search();\n    }\n  };\n\n  const clearAll = () => {\n    dispatch(clearState());\n    setQuery(\"\");\n  };\n\n  if (!location.state) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/signin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: customersLimit.background,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: customersLimit.limitsBody,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: customersLimit.searchDiv,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: customersLimit.searchBox,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                placeholder: \"Search customer by Sub domain\",\n                value: query,\n                onChange: e => setQuery(e.target.value),\n                onKeyPress: e => handleEnter(e),\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this), (customer || errorState) && query !== \"\" && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: customersLimit.clear,\n                onClick: clearAll,\n                children: \"Clear\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: search,\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [(customer || errorState) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: customersLimit.searchOrg,\n              children: queryData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: customersLimit.headRow,\n              children: [meters.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: item\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this)), meters.length !== 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), customer && /*#__PURE__*/_jsxDEV(CustomerCard, {\n              items: customer,\n              meters: meters,\n              exceeded: exceededState,\n              handleModalData: handleModalData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), isLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 27\n          }, this), errorState && /*#__PURE__*/_jsxDEV(Error, {\n            message: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(ExceededModal, {\n            modalStatus: modalStatus,\n            modalData: modalData,\n            handleChange: handleChange,\n            query: queryData,\n            meters: meters,\n            exceeded: exceededState,\n            handleModalStatus: handleModalExceededStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(CustomersLimit, \"OM05p9E3aA0EwIwHZHkU7jvww70=\", false, function () {\n  return [useDispatch, useLocation, useSelector];\n});\n\n_c = CustomersLimit;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomersLimit\");","map":{"version":3,"sources":["/home/soumitha-revv/Revv/revv-one/src/customersLimit/index.js"],"names":["React","Fragment","useEffect","useState","CustomerCard","ExceededModal","customersLimit","useDispatch","useSelector","clearState","getCustomer","Loading","Error","Redirect","useLocation","CustomersLimit","modalData","setModalData","modalStatus","setModalStatus","exceededState","setExceededState","query","setQuery","dispatch","location","customer","isLoading","error","errorState","meters","queryData","state","search","handleModalData","item","handleModalExceededStatus","status","key","limit","usage","handleChange","type","value","handleEnter","e","clearAll","background","limitsBody","searchDiv","searchBox","target","clear","searchOrg","headRow","map","index","length"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { CustomerCard } from \"../components/customerCard\";\nimport { ExceededModal } from \"../components/exceededModal\";\nimport customersLimit from \"./customersLimit.module.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { clearState, getCustomer } from \"../redux/actions\";\nimport { Loading } from \"../commonComponents/loading\";\nimport { Error } from \"../commonComponents/error\";\nimport { Redirect, useLocation } from \"react-router\";\n\nexport const CustomersLimit = () => {\n  const [modalData, setModalData] = useState(null);\n  const [modalStatus, setModalStatus] = useState(false);\n  const [exceededState, setExceededState] = useState(false);\n  const [query, setQuery] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  const {\n    customer,\n    isLoading,\n    error,\n    errorState,\n    meters,\n    queryData,\n  } = useSelector((state) => state.customer);\n\n  const search = () => {\n    dispatch(getCustomer(query));\n  };\n\n  const handleModalData = (item) => {\n    setModalData(item);\n    setModalStatus(true);\n  };\n\n  const handleModalExceededStatus = () => {\n    setModalData({});\n    setModalStatus(false);\n    search();\n  };\n\n  useEffect(() => {\n    let status = false;\n    for (const key in customer) {\n      status = status || customer[key].limit <= customer[key].usage;\n    }\n    setExceededState(status);\n  }, [customer, modalData]);\n\n  useEffect(() => {\n    if (query === \"\") {\n      dispatch(clearState());\n    }\n  }, [query]);\n\n  const handleChange = (type, value, usage) => {\n    setModalData({ ...modalData, [type]: { limit: value, usage } });\n  };\n\n  const handleEnter = (e) => {\n    if (e.key === \"Enter\") {\n      search();\n    }\n  };\n\n  const clearAll = () => {\n    dispatch(clearState());\n    setQuery(\"\");\n  };\n\n  if (!location.state) {\n    return <Redirect to=\"/signin\" />;\n  } else {\n    return (\n      <Fragment>\n        <div className={customersLimit.background}>\n          <div className={customersLimit.limitsBody}>\n            <div className={customersLimit.searchDiv}>\n              <div className={customersLimit.searchBox}>\n                <input\n                  placeholder=\"Search customer by Sub domain\"\n                  value={query}\n                  onChange={(e) => setQuery(e.target.value)}\n                  onKeyPress={(e) => handleEnter(e)}\n                  autoFocus\n                />\n                {(customer || errorState) && query !== \"\" && (\n                  <span className={customersLimit.clear} onClick={clearAll}>\n                    Clear\n                  </span>\n                )}\n              </div>\n              <button onClick={search}>Search</button>\n            </div>\n\n            <div>\n              {(customer || errorState) && (\n                <div className={customersLimit.searchOrg}>{queryData}</div>\n              )}\n\n              <div className={customersLimit.headRow}>\n                {meters.map((item, index) => (\n                  <div key={index}>{item}</div>\n                ))}\n                {meters.length !== 0 && <div>Status</div>}\n              </div>\n\n              {customer && (\n                <CustomerCard\n                  items={customer}\n                  meters={meters}\n                  exceeded={exceededState}\n                  handleModalData={handleModalData}\n                />\n              )}\n            </div>\n\n            {isLoading && <Loading />}\n\n            {errorState && <Error message={error} />}\n\n            <ExceededModal\n              modalStatus={modalStatus}\n              modalData={modalData}\n              handleChange={handleChange}\n              query={queryData}\n              meters={meters}\n              exceeded={exceededState}\n              handleModalStatus={handleModalExceededStatus}\n            />\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n};\n"]},"metadata":{},"sourceType":"module"}